# WSL Configuration Playbook

# Use Tags to select the one of the sections below:
  # apt - Software Installation
  # git - Development Git Repository Configuration

- name: Localhost Git Config
  hosts: all,localhost
  vars:
    git: "~/git/"
    repos:
      - "git@github.com:epichouse/md-docs.git"
      - "git@github.com:epichouse/bash.git"
      - "git@github.com:epichouse/bash.git"
      - "git@github.com:epichouse/infrastructure.git"
      - "git@github.com:epichouse/workflow-templates.git"
      - "git@github.com:epichouse/snippets.git"
      - "git@github.com:epichouse/.github-private.git"
      - "git@github.com:epichouse/.github.git"
      - "git@github.com:epichouse/docker-images.git"
      - "git@github.com:epichouse/compose-templates.git"
      - "git@github.com:epichouse/licenses.git"
      - "git@github.com:epichouse/python.git"
      - "git@github.com:epichouse/terraform.git"
      - "git@github.com:epichouse/powershell.git"
      - "git@ssh.dev.azure.com:v3/EpichouseCloud/DS/app-snake"
      - "git@ssh.dev.azure.com:v3/EpichouseCloud/DS/app-web"
      - "git@ssh.dev.azure.com:v3/EpichouseCloud/DS/terraform-modules"
      - "git@ssh.dev.azure.com:v3/EpichouseCloud/DS/terraform-shared"
      - "git@ssh.dev.azure.com:v3/EpichouseCloud/DS/terraform-webserver"
      - "git@ssh.dev.azure.com:v3/EpichouseCloud/DS/terraform-cloudflare"
      - "git@ssh.dev.azure.com:v3/EpichouseCloud/DS/pipeline-templates"
      - "git@ssh.dev.azure.com:v3/EpichouseCloud/DS/app-snake"
  tasks:
    - name: Global Utility Installation
      become: true
      tags: apt
      ansible.builtin.apt:
        pkg: 
        - git
        - just
        - neofetch
        - stress
        - fio
        - gnupg
        - curl
        - ca-certificates
        - unzip
        - htop
        - git
        - net-tools
        - nfs-common
        - cifs-utils
        - rsync
        - tmux
    - ansible.builtin.file:
        path: "{{ git }}"
        state: directory
      tags: git
    - ansible.builtin.git:
        repo: "{{ item }}"
        dest: "{{ git }}/{{ item | basename | replace('.git', '') }}"
        update: yes
      ignore_errors: "{{ ansible_check_mode }}"
      with_items: "{{repos}}"
      tags: git